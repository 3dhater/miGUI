#include "framework/mgf.h"
#include <filesystem>
#include "framework/Archive.h"

MGF_LINK_LIBRARY("mgf")

// Function must create outFile, .h file, that contain array and (maybe some 
//  other data) with `name`
void compress_file(const char* inFile, const char* outFile, const char* name)
{
	FILE* f = fopen(inFile, "rb");
	if (f)
	{
		std::uintmax_t inFileSz = std::filesystem::file_size(inFile);
		if (inFileSz)
		{
			uint8_t* fileData = (uint8_t*)malloc((size_t)inFileSz);
			if (fileData)
			{
				fread(fileData, (size_t)inFileSz, 1, f);

				mgf::ArchiveSystem archive;
				mgf::CompressionInfo cmpInf;
				cmpInf.m_dataUncompressed = fileData;
				cmpInf.m_sizeUncompressed = (uint32_t)inFileSz;
				if (archive.Compress(&cmpInf))
				{
					// write .h file
					FILE* f_out = fopen(outFile, "wb");
					if (f_out)
					{
						fprintf(f_out, "// Generated by resconv.exe\r\n");
						fprintf(f_out, "// %s : %s\r\n\r\n", outFile, name);

						if (cmpInf.m_dataCompressed)
						{
							fprintf(f_out, "extern const uint8_t %s_data[%u];\r\n\r\n", name, cmpInf.m_sizeCompressed);
						}
						else
						{
							fprintf(f_out, "extern const uint8_t %s_data[%u];\r\n\r\n", name, cmpInf.m_sizeUncompressed);
						}

						fprintf(f_out, "static const mgf::CompressionInfo %s_cmpInf = {\r\n", name);
						fprintf(f_out, "\tmgf::CompressorType::fastlz,\r\n");
						fprintf(f_out, "\t%u,\r\n", cmpInf.m_sizeUncompressed);

						if (cmpInf.m_dataCompressed)
						{
							fprintf(f_out, "\tNULL,\r\n");
							fprintf(f_out, "\t%u,\r\n", cmpInf.m_sizeCompressed);
							fprintf(f_out, "\t(uint8_t*)%s_data,\r\n", name);
						}
						else
						{
							fprintf(f_out, "\t(uint8_t*)%s_data,\r\n", name);
							fprintf(f_out, "\t0,\r\n");
							fprintf(f_out, "\tNULL,\r\n");
						}

						fprintf(f_out, "\t2\r\n");
						fprintf(f_out, "};\r\n\r\n");

						fprintf(f_out, "static const uint8_t %s_data[%u] = {\r\n", name, cmpInf.m_sizeCompressed);
						int byte_counter = 0;
						for (uint32_t i = 0; i < cmpInf.m_sizeCompressed; ++i)
						{
							if(!byte_counter)
								fprintf(f_out, "\t");

							fprintf(f_out, "0x%02X, ", ((uint8_t*)cmpInf.m_dataCompressed)[i]);

							++byte_counter;
							if (byte_counter == 8)
							{
								fprintf(f_out, "\r\n");
								byte_counter = 0;
							}
						}
						fprintf(f_out, "\r\n};\r\n\r\n");

						fclose(f_out);
					}

					if(cmpInf.m_dataCompressed)
						free(cmpInf.m_dataCompressed);
				}

				free(fileData);
			}
		}
		fclose(f);
	}
}

int main()
{
	compress_file("../data/icons.png", "../src/data/icons.h", "_data_icons");

	return 0;
}